@startuml euphonic_api
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

HIDE_STEREOTYPE()

skinparam rectangle<<file_system>> {
    StereotypeFontColor #000000
    FontColor #000000
    BackgroundColor #85BBF0
    BorderColor #78A8D8
}
!unquoted procedure System_File($alias, $label, $descr="", $sprite="")
rectangle "$getSystem($label, $descr, $sprite)" <<file_system>> as $alias
!endprocedure

!unquoted procedure RelNoLabel($alias1, $alias2, $direction="-->>")
$alias1 $direction $alias2
!endprocedure

Boundary(euphonic, "Euphonic Python API") {
    System(force_constants, "ForceConstants", "Force constants and supercell information")
    System(qpm, "QpointPhononModes", "Frequencies and eigenvectors at q-points")
'    System(qpf, "QpointFrequencies", "Contains frequencies at q-points")
    System(crystal_sf, "StructureFactor","Coherent crystal structure factor at q-points")
    System(2d_spectrum, "Spectrum2D", "Generic 2D data e.g. S(Q,w)")
    System(1d_spectrum, "Spectrum1D", "Generic 1D data e.g. density of states")
    System(1d_spectrum_col, "Spectrum1DCollection", "Multiple generic 1D data e.g. collections of partial DOS, dispersion lines")
    System(debye_waller, "DebyeWaller", "Debye-Waller exponent")
    System(1d_plotter, "1D Plotter")
    System(2d_plotter, "2D Plotter")
}

System_File(fc_file, "Force Constants File")
System_File(qpm_file, "Phonon Frequencies and Eigenvectors File")

Rel(fc_file, force_constants, "from_castep")
Rel(fc_file, force_constants, "from_phonopy")
Rel(qpm_file, qpm, "from_castep")
Rel(qpm_file, qpm, "from_phonopy")
Rel(force_constants, qpm, "calculate_qpoint_phonon_modes")
Rel(qpm, crystal_sf, "calculate_structure_factor")
Rel(qpm, 1d_spectrum, "calculate_dos")
Rel(qpm, 1d_spectrum_col, "calculate_pdos")
Rel(qpm, 1d_spectrum_col, "get_dispersion")
Rel(qpm, debye_waller, "calculate_debye_waller")
Rel(crystal_sf, 2d_spectrum, "calculate_sqw_map")
Rel(crystal_sf, 1d_spectrum, "calculate_1d_average")
Rel(1d_spectrum, 1d_plotter, "Is plotted by")
Rel(1d_spectrum_col, 1d_plotter, "Is plotted by")
Rel(2d_spectrum, 2d_plotter, "Is plotted by")

Lay_L(debye_waller, qpm)

@enduml